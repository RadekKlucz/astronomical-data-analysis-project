se_error
# Clculate standard deviation
standard_deviation_densinity <- sd(densinity)
standard_deviation_err <- sd(error)
# Calculate median standard error
se_densinity <- (standard_deviation_densinity * 1.253) / sqrt(26)
se_error <- (standard_deviation_err * 1.253) / sqrt(26)
graph_data <-
dotchart(
densinity,
labels = names,
cex = 0.9,
xlab = expression(Densinity ~ (g / cm ^ 3))
)
print(graph_data)
graph_errors <-
plot(
densinity,
ylim = c(0, 8),
xlab = "Asteroids",
ylab = expression(Densinity ~ (g / cm ^ 3)),
pch = 20
) + grid()
num <- seq(1, length(densinity))
segments(num, densinity + error, num, densinity - error)
print(graph_errors)
graph_comprasion <-
boxplot(
asteroids[, 2:3],
varwidth = T,
notch = T,
xlab = "Asteroids",
ylab = "Densinity
",
pars = list(
boxwex = 0.3,
boxlwd = 1.5,
whisklwd = 1.5,
staplelwd = 1.5,
outlwd = 1.5,
font = 2
)
) + grid()
graph_comprasion <-
boxplot(
asteroids[, 2:3],
varwidth = T,
notch = T,
xlab = "Asteroids",
ylab = "Densinity
",
pars = list(
boxwex = 0.3,
boxlwd = 1.5,
whisklwd = 1.5,
staplelwd = 1.5,
outlwd = 1.5,
font = 2
)
)
print(graph_comprasion)
# Chunk 1
# Load the required libraries
library(nortest)
library(outliers)
# Set working directory. If you don't know the path, enter pwd in the terminal to find your path
setwd("~/GitHub/R-project/main")
# Load data with the file from data folder
asteroids <- read.table("./data/asteroids.txt", header = T)
# Sort data using second column
asteroids_sorted <- asteroids[order(asteroids$Dens),]
# Assign columns
names <- asteroids_sorted[, 1]
densinity <- asteroids_sorted[, 2]
error <- asteroids_sorted[, 3]
# Chunk 2
summary(asteroids)
# Chunk 3
# Clculate standard deviation
standard_deviation_densinity <- sd(densinity)
standard_deviation_err <- sd(error)
# Calculate median standard error
se_densinity <- (standard_deviation_densinity * 1.253) / sqrt(26)
se_error <- (standard_deviation_err * 1.253) / sqrt(26)
# Chunk 4
se_densinity
se_error
# Chunk 5: figure 1
graph_data <-
dotchart(
densinity,
labels = names,
cex = 0.9,
xlab = expression(Densinity ~ (g / cm ^ 3))
)
print(graph_data)
# Chunk 6: figure 2
graph_errors <-
plot(
densinity,
ylim = c(0, 8),
xlab = "Asteroids",
ylab = expression(Densinity ~ (g / cm ^ 3)),
pch = 20
) + grid()
num <- seq(1, length(densinity))
segments(num, densinity + error, num, densinity - error)
print(graph_errors)
# Chunk 7: figure 3
graph_comprasion <-
boxplot(
asteroids[, 2:3],
varwidth = T,
notch = T,
xlab = "Asteroids",
ylab = "Densinity
",
pars = list(
boxwex = 0.3,
boxlwd = 1.5,
whisklwd = 1.5,
staplelwd = 1.5,
outlwd = 1.5,
font = 2
)
)
print(graph_comprasion)
# Chunk 8
lillie.test(densinity)
lillie.test(error)
# Chunk 9
shapiro.test(densinity)
shapiro.test(error)
# Chunk 10
dixon.test(densinity)
# Chunk 11
grubbs.test(densinity)
# Chunk 12
# Load globular clusters data from two files
galaxies_M31 <- read.table('./data/GlobClus_M31.dat', header = T)
galaxies_MW <- read.table('./data/GlobClus_MWG.dat', header = T)
# Assing variables
m_31 <- galaxies_M31[,2]  ;
milky_way <- galaxies_MW[,2]
# Chunk 13
summary(galaxies_MW)
# Chunk 14
summary(galaxies_2)
summary(galaxies_M31)
histogram_milky_way <- hist(milky_way)
histogram_m_31 <- hist(m_31)
print(histogram_milky_way)
print(histogram_m_31)
View(galaxies_M31)
View(galaxies_MW)
plot(ecdf(milky_way),cex.points=0,verticals=T, main="Empirical Distributors", col="green")
plot(ecdf(M31+module),cex.points=0,verticals=T,add=T,main="Empirical Distributors", col="red")
graph_distribution_mw <- plot(ecdf(milky_way),cex.points=0,verticals=T, main="Empirical Distributors", col="green")
graph_distribution_m31 <- plot(ecdf(m_31+module),cex.points=0,verticals=T,add=T,main="Empirical Distributors", col="red")
module <- median(milky_way)-median(m_31)
print(module)
graph_distribution_mw <- plot(ecdf(milky_way),cex.points=0,verticals=T, main="Empirical Distributors", col="green")
graph_distribution_m31 <- plot(ecdf(m_31 + module),cex.points=0,verticals=T,add=T,main="Empirical Distributors", col="red")
legend(-8,0.2,legend = c("Milky way","M31"),col = c("green","red"),lty = 1,cex=0.8)
graph_distribution_mw <-
plot(
ecdf(milky_way),
cex.points = 0,
verticals = T,
main = "Empirical Distributors",
col = "green"
)
graph_distribution_m31 <-
plot(
ecdf(m_31 + module),
cex.points = 0,
verticals = T,
add = T,
main = "Empirical Distributors",
col = "red"
)
legend <-
legend(
-8,
0.2,
legend = c("Milky way", "M31"),
col = c("green", "red"),
lty = 1,
cex = 0.8
)
print(graph_distribution_mw + graph_distribution_m31 + legend + grid())
graph_distribution_mw <-
plot(
ecdf(milky_way),
cex.points = 0,
verticals = T,
main = "Empirical Distributors",
col = "green"
)
graph_distribution_m31 <-
plot(
ecdf(m_31 + module),
cex.points = 0,
verticals = T,
add = T,
main = "Empirical Distributors",
col = "red"
)
legend <-
legend(
-8,
0.2,
legend = c("Milky way", "M31"),
col = c("green", "red"),
lty = 1,
cex = 0.8
)
cos <- graph_distribution_mw + graph_distribution_m31 + legend + grid()
graph_distribution_mw <-
plot(
ecdf(milky_way),
cex.points = 0,
verticals = T,
main = "Empirical Distributors",
col = "green"
)
graph_distribution_m31 <-
plot(
ecdf(m_31 + module),
cex.points = 0,
verticals = T,
add = T,
main = "Empirical Distributors",
col = "red"
)
legend <-
legend(
-8,
0.2,
legend = c("Milky way", "M31"),
col = c("green", "red"),
lty = 1,
cex = 0.8
) +  grid()
graph_distribution_mw <-
plot(
ecdf(milky_way),
cex.points = 0,
verticals = T,
main = "Empirical Distributors",
col = "green"
)
graph_distribution_m31 <-
plot(
ecdf(m_31 + module),
cex.points = 0,
verticals = T,
add = T,
main = "Empirical Distributors",
col = "red"
)
legend <-
legend(
-8,
0.2,
legend = c("Milky way", "M31"),
col = c("green", "red"),
lty = 1,
cex = 0.8
)
grid()
wilcox.test(milky_way, m_31 + module)
graph_quantil_1 <- qqnorm(milky_way, pch=20, cex.axis=1.3, cex.lab=1.3, main="")
graph_quantil_mw_2 <- qqline(milky_way, lty=2, lwd=1.5)
qqnorm(m_31, pch=20, cex.axis=1.3, cex.lab=1.3, main="")
qqline(m_31, lty=2, lwd=1.5)
graph_quantil_m31_1 <- qqnorm(m_31, pch=20, cex.axis=1.3, cex.lab=1.3, main="")
graph_quantil_m31_2 <- qqline(m_31, lty=2, lwd=1.5)
graph_quantil_all <-
qqplot(
m_31,
milky_way,
pch = 20,
cex.axis = 1.3,
cex.lab = 1.3,
main = "",
xlab = "M31",
ylab = "Milky way"
)
ks.test(milky_way, m_31 + module)
ks.test(milky_way, m_31 + module)
ks.test(milky_way, m_31 + module)
graph_errors <-
plot(
densinity,
ylim = c(0, 8),
xlab = "Asteroids",
ylab = expression(Densinity ~ (g / cm ^ 3)),
pch = 20
) + grid()
number <- seq(1, length(densinity))
graph_with_all <- segments(number, densinity + error, number, densinity - error)
height <- survey$height
ks.test(milky_way, m_31 + module)
height <- survey$height
# Chunk 1
# Load the required libraries
library(nortest)
library(outliers)
library(MASS)
# Set working directory. If you don't know the path, enter pwd in the terminal to find your path
setwd("~/GitHub/R-project/main")
# Load data with the file from data folder
asteroids <- read.table("./data/asteroids.txt", header = T)
# Sort data using second column
asteroids_sorted <- asteroids[order(asteroids$Dens),]
# Assign columns
names <- asteroids_sorted[, 1]
densinity <- asteroids_sorted[, 2]
error <- asteroids_sorted[, 3]
# Chunk 2
summary(asteroids)
# Chunk 3
# Clculate standard deviation
standard_deviation_densinity <- sd(densinity)
standard_deviation_err <- sd(error)
# Calculate median standard error
se_densinity <- (standard_deviation_densinity * 1.253) / sqrt(26)
se_error <- (standard_deviation_err * 1.253) / sqrt(26)
# Chunk 4
print(se_densinity)
print(se_error)
# Chunk 5: figure 1
graph_data <-
dotchart(
densinity,
labels = names,
cex = 0.9,
xlab = expression(Densinity ~ (g / cm ^ 3))
)
# Chunk 6: figure 2
graph_errors <-
plot(
densinity,
ylim = c(0, 8),
xlab = "Asteroids",
ylab = expression(Densinity ~ (g / cm ^ 3)),
pch = 20
) + grid()
number <- seq(1, length(densinity))
graph_with_all <- segments(number, densinity + error, number, densinity - error)
# Chunk 7: figure 3
graph_comprasion <-
boxplot(
asteroids[, 2:3],
varwidth = T,
notch = T,
xlab = "Asteroids",
ylab = "Densinity
",
pars = list(
boxwex = 0.3,
boxlwd = 1.5,
whisklwd = 1.5,
staplelwd = 1.5,
outlwd = 1.5,
font = 2
)
)
# Chunk 8
lillie.test(densinity)
lillie.test(error)
# Chunk 9
shapiro.test(densinity)
shapiro.test(error)
# Chunk 10
dixon.test(densinity)
# Chunk 11
grubbs.test(densinity)
# Chunk 12
# Load globular clusters data from two files
galaxies_M31 <- read.table('./data/GlobClus_M31.dat', header = T)
galaxies_MW <- read.table('./data/GlobClus_MWG.dat', header = T)
# Assing variables
m_31 <- galaxies_M31[,2]
milky_way <- galaxies_MW[,2]
# Chunk 13
summary(galaxies_MW)
# Chunk 14
summary(galaxies_M31)
# Chunk 15: figure 4
histogram_milky_way <- hist(milky_way)
histogram_m_31 <- hist(m_31)
# Chunk 16
module <- median(milky_way) - median(m_31)
print(module)
# Chunk 17: figure 5
graph_distribution_mw <-
plot(
ecdf(milky_way),
cex.points = 0,
verticals = T,
main = "Empirical Distributors",
col = "green"
)
graph_distribution_m31 <-
plot(
ecdf(m_31 + module),
cex.points = 0,
verticals = T,
add = T,
main = "Empirical Distributors",
col = "red"
)
legend <-
legend(
-8,
0.2,
legend = c("Milky way", "M31"),
col = c("green", "red"),
lty = 1,
cex = 0.8
)
grid()
# Chunk 18
wilcox.test(milky_way, m_31 + module)
# Chunk 19: figure 6
graph_quantil_mw_1 <-
qqnorm(
milky_way,
pch = 20,
cex.axis = 1.3,
cex.lab = 1.3,
main = ""
)
graph_quantil_mw_2 <- qqline(milky_way, lty = 2, lwd = 1.5)
# Chunk 20: figure 7
graph_quantil_m31_1 <-
qqnorm(
m_31,
pch = 20,
cex.axis = 1.3,
cex.lab = 1.3,
main = ""
)
graph_quantil_m31_2 <- qqline(m_31, lty = 2, lwd = 1.5)
# Chunk 21: figure 8
graph_quantil_all <-
qqplot(
m_31,
milky_way,
pch = 20,
cex.axis = 1.3,
cex.lab = 1.3,
main = "",
xlab = "M31",
ylab = "Milky way"
)
# Chunk 22
ks.test(milky_way, m_31 + module)
height <- survey$height
estimator <- mean(height, na.rm = T)
print(estimator)
height <- survey$height
estimator <- mean(height, na.rm = T)
print(height)
height <- survey$height
estimator <- mean(height, na.rm = T)
print(height)
height <- survey$Height
estimator <- mean(height, na.rm = T)
print(height)
print(quantil_1)
# Student distribution
standard_deviation_student <- sd(height, na.rm = T)
n <- length(height)
student_t <- qt(0.975, n - 1)
print(student_t)
# The confidence interval
quantil_1 <-
qt(0.05 / 2, 237 - 1) * standard_deviation_student / sqrt(n) + estimator
print(quantil_1)
quantil_2 <-
qt(1 - 0.05 / 2, 237 - 1) * standard_deviation_student / sqrt(n) + estimator
print(quantil_2)
print(quantil_1), print(quantil_2)
print(quantil_1); print(quantil_2)
[print(quantil_1); print(quantil_2)]
(print(quantil_1); print(quantil_2))
student_t
standard_deviation_student
quantil_mean <- mean(quantil_1 +quantil_2)
quantil_mean
quantil_mean <- mean(quantil_1, quantil_2)
quantil_mean <- mean(quantil_1, quantil_2)
quantil_mean
quantil_mean <- mean(quantil_1, quantil_2)
quantil_error <- sd(quantil_1, quantil_2)
quantil_mean <- mean(quantil_1, quantil_2)
quantil_error
quantil_mean <- mean(quantil_1, quantil_2)
quantil_error
sd(quantil_1, quantil_2)
sd(quantil_1)
quantil_1
quantil_2
quantil_mean <- mean(quantil_1, quantil_2)
quantil_error <- sd(quantil_mean)
quantil_mean <- mean(quantil_1, quantil_2)
quantil_error
source("~/.active-rstudio-document", echo=TRUE)
tinytex::install_tinytex()
